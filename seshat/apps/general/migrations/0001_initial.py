# Generated by Django 4.0.3 on 2022-12-15 12:25

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0013_alter_seshat_task_task_url'),
        ('core', '0042_alter_nga_world_region'),
    ]

    operations = [
        migrations.CreateModel(
            name='Polity_utm_zone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Referenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Polity_utm_zone', max_length=100)),
                ('utm_zone', models.CharField(blank=True, max_length=500, null=True)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.seshatcomment')),
                ('curator', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='accounts.seshat_expert')),
                ('polity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Polity_utm_zone',
                'verbose_name_plural': 'Polity_utm_zones',
            },
        ),
        migrations.CreateModel(
            name='Polity_suprapolity_relations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Referenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Polity_suprapolity_relations', max_length=100)),
                ('supra_polity_relations', models.CharField(choices=[('none', 'none'), ('vassalage', 'vassalage'), ('alliance', 'alliance'), ('nominal allegiance', 'nominal allegiance'), ('suspected unknown', 'suspected unknown'), ('nominal', 'nominal'), ('personal union', 'personal union'), ('NO_VALUE_ON_WIKI', 'NO_VALUE_ON_WIKI'), ('unknown', 'unknown'), ('Nominal', 'Nominal'), ('Alliance', 'Alliance'), ('uncoded', 'uncoded')], max_length=500)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.seshatcomment')),
                ('curator', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='accounts.seshat_expert')),
                ('polity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Polity_suprapolity_relations',
                'verbose_name_plural': 'Polity_suprapolity_relations',
            },
        ),
        migrations.CreateModel(
            name='Polity_supracultural_entity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Referenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Polity_supracultural_entity', max_length=100)),
                ('supracultural_entity', models.CharField(blank=True, max_length=500, null=True)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.seshatcomment')),
                ('curator', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='accounts.seshat_expert')),
                ('polity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Polity_supracultural_entity',
                'verbose_name_plural': 'Polity_supracultural_entities',
            },
        ),
        migrations.CreateModel(
            name='Polity_succeeding_entity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Referenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Polity_succeeding_entity', max_length=100)),
                ('succeeding_entity', models.CharField(blank=True, max_length=500, null=True)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.seshatcomment')),
                ('curator', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='accounts.seshat_expert')),
                ('polity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Polity_succeeding_entity',
                'verbose_name_plural': 'Polity_succeeding_entities',
            },
        ),
        migrations.CreateModel(
            name='Polity_scale_of_supracultural_interaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Referenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Polity_scale_of_supracultural_interaction', max_length=100)),
                ('scale_from', models.IntegerField(blank=True, null=True)),
                ('scale_to', models.IntegerField(blank=True, null=True)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.seshatcomment')),
                ('curator', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='accounts.seshat_expert')),
                ('polity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Polity_scale_of_supracultural_interaction',
                'verbose_name_plural': 'Polity_scale_of_supracultural_interactions',
            },
        ),
        migrations.CreateModel(
            name='Polity_research_assistant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Referenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Polity_research_assistant', max_length=100)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.seshatcomment')),
                ('curator', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='accounts.seshat_expert')),
                ('polity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
                ('polity_ra', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='seshat_research_assistant', to='accounts.seshat_expert')),
            ],
            options={
                'verbose_name': 'Polity_research_assistant',
                'verbose_name_plural': 'Polity_research_assistants',
            },
        ),
        migrations.CreateModel(
            name='Polity_religious_tradition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Referenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Polity_religious_tradition', max_length=100)),
                ('religious_tradition', models.CharField(blank=True, max_length=500, null=True)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.seshatcomment')),
                ('curator', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='accounts.seshat_expert')),
                ('polity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Polity_religious_tradition',
                'verbose_name_plural': 'Polity_religious_traditions',
            },
        ),
        migrations.CreateModel(
            name='Polity_religion_genus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Referenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Polity_religion_genus', max_length=100)),
                ('religion_genus', models.CharField(choices=[('Zoroastrianism', 'Zoroastrianism'), ('Graeco-Bactrian Religions', 'Graeco-Bactrian Religions'), ('Buddhism', 'Buddhism'), ('Christianity', 'Christianity'), ('Islam', 'Islam'), ('Mongolian Shamanism', 'Mongolian Shamanism'), ('Hittite Religions', 'Hittite Religions'), ('Ismaili', 'Ismaili'), ('Lydian Religions', 'Lydian Religions'), ('Chinese State Religion', 'Chinese State Religion'), ('Egyptian Religions', 'Egyptian Religions'), ('Ancient Iranian Religions', 'Ancient Iranian Religions'), ('Hellenistic Religions', 'Hellenistic Religions'), ('Hephthalite Religions', 'Hephthalite Religions'), ('Manichaeism', 'Manichaeism'), ('Ancient East Asian Religion', 'Ancient East Asian Religion'), ('Jain Traditions', 'Jain Traditions'), ('Xiongnu Religions', 'Xiongnu Religions'), ('Roman State Religions', 'Roman State Religions'), ('Shinto', 'Shinto'), ('Phrygian Religions', 'Phrygian Religions'), ('Mesopotamian Religions', 'Mesopotamian Religions'), ('Hinduism', 'Hinduism'), ('Ancient Javanese Religions', 'Ancient Javanese Religions'), ('Confucianism', 'Confucianism')], max_length=500)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.seshatcomment')),
                ('curator', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='accounts.seshat_expert')),
                ('polity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Polity_religion_genus',
                'verbose_name_plural': 'Polity_religion_genus',
            },
        ),
        migrations.CreateModel(
            name='Polity_religion_family',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Referenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Polity_religion_family', max_length=100)),
                ('religion_family', models.CharField(choices=[('Saivist Traditions', 'Saivist Traditions'), ('Assyrian Religions', 'Assyrian Religions'), ('Republican Religions', 'Republican Religions'), ('Imperial Confucian Traditions', 'Imperial Confucian Traditions'), ('Shii', 'Shii'), ('Bhagavatist Traditions', 'Bhagavatist Traditions'), ('Sunni', 'Sunni'), ('Vedist Traditions', 'Vedist Traditions'), ('Saivist', 'Saivist'), ('Islam', 'Islam'), ('Chinese Folk Religion', 'Chinese Folk Religion'), ('Semitic', 'Semitic'), ('Vaisnava Traditions', 'Vaisnava Traditions'), ('Ptolemaic Religion', 'Ptolemaic Religion'), ('Vedic Traditions', 'Vedic Traditions'), ('Japanese Buddhism', 'Japanese Buddhism'), ('Orthodox', 'Orthodox'), ('Vaishnava Traditions', 'Vaishnava Traditions'), ('Shang Religion', 'Shang Religion'), ('Atenism', 'Atenism'), ('Mahayana', 'Mahayana'), ('suspected unknown', 'suspected unknown'), ('Japanese State Shinto', 'Japanese State Shinto'), ('Saiva Traditions', 'Saiva Traditions'), ('Sufi', 'Sufi'), ('Chinese Buddhist Traditions', 'Chinese Buddhist Traditions'), ('Arian', 'Arian'), ('Shia', 'Shia'), ('Catholic', 'Catholic'), ('Western Zhou Religion', 'Western Zhou Religion'), ('Imperial Cult', 'Imperial Cult'), ('Theravada', 'Theravada'), ('Seleucid Religion', 'Seleucid Religion')], max_length=500)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.seshatcomment')),
                ('curator', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='accounts.seshat_expert')),
                ('polity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Polity_religion_family',
                'verbose_name_plural': 'Polity_religion_families',
            },
        ),
        migrations.CreateModel(
            name='Polity_religion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Referenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Polity_religion', max_length=100)),
                ('religion', models.CharField(choices=[('Islam', 'Islam'), ('Shadhil', 'Shadhil'), ('Karrami', 'Karrami'), ('Hanafi', 'Hanafi'), ('Mevlevi', 'Mevlevi'), ('Ismaili', 'Ismaili'), ('Shafii', 'Shafii'), ('Shia', 'Shia'), ('Twelver', 'Twelver'), ('Byzantine Orthodox', 'Byzantine Orthodox'), ('Bektasi', 'Bektasi'), ('NO_VALUE_ON_WIKI', 'NO_VALUE_ON_WIKI'), ('Sunni', 'Sunni'), ('Roman Catholic', 'Roman Catholic')], max_length=500)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.seshatcomment')),
                ('curator', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='accounts.seshat_expert')),
                ('polity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Polity_religion',
                'verbose_name_plural': 'Polity_religions',
            },
        ),
        migrations.CreateModel(
            name='Polity_relationship_to_preceding_entity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Referenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Polity_relationship_to_preceding_entity', max_length=100)),
                ('relationship_to_preceding_entity', models.CharField(choices=[('continuity', 'continuity'), ('elite migration', 'elite migration'), ('cultural assimilation', 'cultural assimilation'), ('continuation', 'continuation'), ('indigenous revolt', 'indigenous revolt'), ('replacement', 'replacement'), ('population migration', 'population migration'), ('hostile', 'hostile'), ('disruption/continuity', 'disruption/continuity'), ('continuity/discontinuity', 'continuity/discontinuity'), ('NO_VALUE_ON_WIKI', 'NO_VALUE_ON_WIKI'), ('suspected unknown', 'suspected unknown'), ('vassalage', 'vassalage'), ('not applicable', 'not applicable')], max_length=500)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.seshatcomment')),
                ('curator', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='accounts.seshat_expert')),
                ('polity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Polity_relationship_to_preceding_entity',
                'verbose_name_plural': 'Polity_relationship_to_preceding_entities',
            },
        ),
        migrations.CreateModel(
            name='Polity_preceding_entity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Referenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Polity_preceding_entity', max_length=100)),
                ('preceding_entity', models.CharField(blank=True, max_length=500, null=True)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.seshatcomment')),
                ('curator', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='accounts.seshat_expert')),
                ('polity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Polity_preceding_entity',
                'verbose_name_plural': 'Polity_preceding_entities',
            },
        ),
        migrations.CreateModel(
            name='Polity_peak_years',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Referenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Polity_peak_years', max_length=100)),
                ('peak_year_from', models.IntegerField(blank=True, null=True)),
                ('peak_year_to', models.IntegerField(blank=True, null=True)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.seshatcomment')),
                ('curator', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='accounts.seshat_expert')),
                ('polity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Polity_peak_years',
                'verbose_name_plural': 'Polity_peak_years',
            },
        ),
        migrations.CreateModel(
            name='Polity_original_name',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Referenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Polity_original_name', max_length=100)),
                ('original_name', models.CharField(blank=True, max_length=500, null=True)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.seshatcomment')),
                ('curator', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='accounts.seshat_expert')),
                ('polity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Polity_original_name',
                'verbose_name_plural': 'Polity_original_names',
            },
        ),
        migrations.CreateModel(
            name='Polity_linguistic_family',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Referenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Polity_linguistic_family', max_length=100)),
                ('linguistic_family', models.CharField(choices=[('Indo-European', 'Indo-European'), ('Sino-Tibetan', 'Sino-Tibetan'), ('NO_VALUE_ON_WIKI', 'NO_VALUE_ON_WIKI'), ('Tungusic', 'Tungusic'), ('Altaic', 'Altaic'), ('Mongolic', 'Mongolic'), ('Chibcha', 'Chibcha'), ('Chicham', 'Chicham'), ('Afro-Asiatic', 'Afro-Asiatic'), ('Oceanic-Austronesian', 'Oceanic-Austronesian'), ('Celtic', 'Celtic'), ('Niger-Congo', 'Niger-Congo'), ('Kwa', 'Kwa'), ('Hamito-Semitic', 'Hamito-Semitic'), ('Austronesian', 'Austronesian'), ('Malayo-Polynesian', 'Malayo-Polynesian'), ('Semitic', 'Semitic'), ('Indo-Iranian', 'Indo-Iranian'), ('Dravidian', 'Dravidian'), ('isolate language', 'isolate language'), ('West Semetic', 'West Semetic'), ('isolate', 'isolate'), ('suspected unknown', 'suspected unknown'), ('language isolate', 'language isolate'), ('none', 'none'), ('Germanic', 'Germanic'), ('Japonic', 'Japonic'), ('Turkic', 'Turkic'), ('Austro-Asiatic, Mon-Khmer', 'Austro-Asiatic, Mon-Khmer'), ('Austro-Asiatic', 'Austro-Asiatic'), ('unknown', 'unknown'), ('Mande', 'Mande'), ('Songhay', 'Songhay'), ('Oghuz', 'Oghuz'), ('Kartvelian', 'Kartvelian'), ('Manchu-Tungusic', 'Manchu-Tungusic'), ('Proto-Mongolic', 'Proto-Mongolic'), ('Otomanguean', 'Otomanguean'), ('Proto-Otomanguean', 'Proto-Otomanguean'), ('Mixe-Zoquean', 'Mixe-Zoquean'), ('Aymaran', 'Aymaran'), ('Quechuan', 'Quechuan'), ('Papuan Languages', 'Papuan Languages'), ('Tai-Kadai', 'Tai-Kadai'), ('Algonquian', 'Algonquian'), ('Iroquois', 'Iroquois'), ('Iranian', 'Iranian')], max_length=500)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.seshatcomment')),
                ('curator', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='accounts.seshat_expert')),
                ('polity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Polity_linguistic_family',
                'verbose_name_plural': 'Polity_linguistic_families',
            },
        ),
        migrations.CreateModel(
            name='Polity_language_genus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Referenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Polity_language_genus', max_length=100)),
                ('language_genus', models.CharField(choices=[('NO_VALUE_ON_WIKI', 'NO_VALUE_ON_WIKI'), ('Afro-Asiatic', 'Afro-Asiatic'), ('Indo-European', 'Indo-European'), ('suspected unknown', 'suspected unknown')], max_length=500)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.seshatcomment')),
                ('curator', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='accounts.seshat_expert')),
                ('polity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Polity_language_genus',
                'verbose_name_plural': 'Polity_language_genus',
            },
        ),
        migrations.CreateModel(
            name='Polity_language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Referenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Polity_language', max_length=100)),
                ('language', models.CharField(choices=[('Pashto', 'Pashto'), ('Persian', 'Persian'), ('Greek', 'Greek'), ('Bactrian', 'Bactrian'), ('Sogdian', 'Sogdian'), ('Pahlavi', 'Pahlavi'), ('Brahmi', 'Brahmi'), ('Kharoshthi', 'Kharoshthi'), ('Tocharian', 'Tocharian'), ('Chinese', 'Chinese'), ('archaic Chinese', 'archaic Chinese'), ('Xiangxi', 'Xiangxi'), ('Qiandong', 'Qiandong'), ('Chuanqiandian', 'Chuanqiandian'), ('Hmong-Mien', 'Hmong-Mien'), ('Hmongic', 'Hmongic'), ('Middle Chinese', 'Middle Chinese'), ('Jurchen', 'Jurchen'), ('Khitan', 'Khitan'), ('Xianbei', 'Xianbei'), ('Manchu language', 'Manchu language'), ('Mongolian language', 'Mongolian language'), ('Atanque', 'Atanque'), ('Shuar', 'Shuar'), ('Arabic', 'Arabic'), ('suspected unknown', 'suspected unknown'), ('NO_VALUE_ON_WIKI', 'NO_VALUE_ON_WIKI'), ('Demotic', 'Demotic'), ('Ancient Egyptian', 'Ancient Egyptian'), ('Late Egyptian', 'Late Egyptian'), ('demotic Egyptian', 'demotic Egyptian'), ('Castilian Spanish', 'Castilian Spanish'), ('Chuukese', 'Chuukese'), ('French', 'French'), ('Langues dOil', 'Langues dOil'), ('Occitan', 'Occitan'), ('Latin', 'Latin'), ('Old Frankish', 'Old Frankish'), ('Germanic', 'Germanic'), ('Gallic', 'Gallic'), ('Gaulish', 'Gaulish'), ('English', 'English'), ('Akan', 'Akan'), ('Twi', 'Twi'), ('Doric Greek', 'Doric Greek'), ('Minoan', 'Minoan'), ('Early Greek', 'Early Greek'), ('Eteocretan', 'Eteocretan'), ('Old Hawaiian', 'Old Hawaiian'), ('Hawaiian', 'Hawaiian'), ('Iban', 'Iban'), ('Sanskrit', 'Sanskrit'), ('Old Javanese', 'Old Javanese'), ('Middle Javanese', 'Middle Javanese'), ('Javanese', 'Javanese'), ('Canaanite', 'Canaanite'), ('Aramaic', 'Aramaic'), ('Hebrew', 'Hebrew'), ('Kannada', 'Kannada'), ('Urdu', 'Urdu'), ('A’chik', 'A’chik'), ('Prakrit', 'Prakrit'), ('Telugu', 'Telugu'), ('Tamil', 'Tamil'), ('Akkadian', 'Akkadian'), ('Sumerian', 'Sumerian'), ('Amorite', 'Amorite'), ('Old Babylonian', 'Old Babylonian'), ('Mesopotamian Religions', 'Mesopotamian Religions'), ('Old Persian', 'Old Persian'), ('Elamite', 'Elamite'), ('Egyptian', 'Egyptian'), ('Old Elamite', 'Old Elamite'), ('Mongolian', 'Mongolian'), ('native Iranian languages', 'native Iranian languages'), ('Turkic', 'Turkic'), ('Turkish', 'Turkish'), ('Babylonian', 'Babylonian'), ('Hurrian', 'Hurrian'), ('Proto-Elamite', 'Proto-Elamite'), ('Old Norse', 'Old Norse'), ('Italian', 'Italian'), ('Middle Japanese', 'Middle Japanese'), ('Old Japanese', 'Old Japanese'), ('Late Old Japanese', 'Late Old Japanese'), ('Japanese', 'Japanese'), ('Early Modern Japanese', 'Early Modern Japanese'), ('Old Turkic', 'Old Turkic'), ('Iranian', 'Iranian'), ('Old Khmer', 'Old Khmer'), ('Mon', 'Mon'), ('Tai', 'Tai'), ('Khmer', 'Khmer'), ('Pali', 'Pali'), ('Phoenician', 'Phoenician'), ('Berber', 'Berber'), ('Spanish', 'Spanish'), ('Portuguese', 'Portuguese'), ('Bambara', 'Bambara'), ('Mande', 'Mande'), ('Songhay', 'Songhay'), ('Russian', 'Russian'), ('Georgian', 'Georgian'), ('Armenian', 'Armenian'), ('Kereid', 'Kereid'), ('Tatar', 'Tatar'), ('Naimans', 'Naimans'), ('Khalkha', 'Khalkha'), ('Rouran', 'Rouran'), ('Xiongnu', 'Xiongnu'), ('Oirat', 'Oirat'), ('Zapotec', 'Zapotec'), ('Icelandic', 'Icelandic'), ('Aymara', 'Aymara'), ('Puquina', 'Puquina'), ('Quechua', 'Quechua'), ('Orokaiva', 'Orokaiva'), ('unknown', 'unknown'), ('Sindhi', 'Sindhi'), ('Punjabi', 'Punjabi'), ('Sakha (Yakut)', 'Sakha (Yakut)'), ('Merotic', 'Merotic'), ('Coptic', 'Coptic'), ('Thai', 'Thai'), ('Proto-Indo-European language', 'Proto-Indo-European language'), ('Nesite', 'Nesite'), ('Luwian', 'Luwian'), ('Hattic', 'Hattic'), ('Hittite', 'Hittite'), ('Old Assyrian dialect of Akkadian', 'Old Assyrian dialect of Akkadian'), ('Indo-European language', 'Indo-European language'), ('Lydian', 'Lydian'), ('Ottoman Turkish', 'Ottoman Turkish'), ('Phrygian', 'Phrygian'), ('Miami Illinois', 'Miami Illinois'), ('Cayuga', 'Cayuga'), ('Mohawk', 'Mohawk'), ('Oneida', 'Oneida'), ('Onondaga', 'Onondaga'), ('Seneca', 'Seneca'), ('Tuscarora', 'Tuscarora'), ('Middle Mongolian', 'Middle Mongolian'), ('Ancient Iranian', 'Ancient Iranian'), ('Chagatai Turkish', 'Chagatai Turkish'), ('Sabaic', 'Sabaic'), ('Mainic', 'Mainic'), ('Qatabanic', 'Qatabanic'), ('Hadramawtic', 'Hadramawtic'), ('Old Arabic', 'Old Arabic')], max_length=500)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.seshatcomment')),
                ('curator', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='accounts.seshat_expert')),
                ('polity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Polity_language',
                'verbose_name_plural': 'Polity_languages',
            },
        ),
        migrations.CreateModel(
            name='Polity_expert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Referenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Polity_expert', max_length=100)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.seshatcomment')),
                ('curator', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='accounts.seshat_expert')),
                ('expert', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='seshat_expert', to='accounts.seshat_expert')),
                ('polity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Polity_expert',
                'verbose_name_plural': 'Polity_experts',
            },
        ),
        migrations.CreateModel(
            name='Polity_editor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Referenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Polity_editor', max_length=100)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.seshatcomment')),
                ('curator', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='accounts.seshat_expert')),
                ('editor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='seshat_editor', to='accounts.seshat_expert')),
                ('polity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Polity_editor',
                'verbose_name_plural': 'Polity_editors',
            },
        ),
        migrations.CreateModel(
            name='Polity_duration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Referenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Polity_duration', max_length=100)),
                ('polity_year_from', models.IntegerField(blank=True, null=True)),
                ('polity_year_to', models.IntegerField(blank=True, null=True)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.seshatcomment')),
                ('curator', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='accounts.seshat_expert')),
                ('polity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Polity_duration',
                'verbose_name_plural': 'Polity_durations',
            },
        ),
        migrations.CreateModel(
            name='Polity_degree_of_centralization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Referenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Polity_degree_of_centralization', max_length=100)),
                ('degree_of_centralization', models.CharField(choices=[('loose', 'loose'), ('confederated state', 'confederated state'), ('unitary state', 'unitary state'), ('nominal', 'nominal'), ('confederate state', 'confederate state'), ('quasi-polity', 'quasi-polity'), ('suspected unknown', 'suspected unknown'), ('none', 'none'), ('unknown', 'unknown'), ('confederation', 'confederation'), ('polity', 'polity'), ('NO_VALUE_ON_WIKI', 'NO_VALUE_ON_WIKI'), ('nominal allegiance', 'nominal allegiance'), ('unitary', 'unitary')], max_length=500)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.seshatcomment')),
                ('curator', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='accounts.seshat_expert')),
                ('polity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Polity_degree_of_centralization',
                'verbose_name_plural': 'Polity_degree_of_centralizations',
            },
        ),
        migrations.CreateModel(
            name='Polity_capital',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Referenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Polity_capital', max_length=100)),
                ('capital', models.CharField(blank=True, max_length=500, null=True)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.seshatcomment')),
                ('curator', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='accounts.seshat_expert')),
                ('polity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Polity_capital',
                'verbose_name_plural': 'Polity_capitals',
            },
        ),
        migrations.CreateModel(
            name='Polity_alternative_name',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Referenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Polity_alternative_name', max_length=100)),
                ('alternative_name', models.CharField(blank=True, max_length=500, null=True)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.seshatcomment')),
                ('curator', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='accounts.seshat_expert')),
                ('polity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Polity_alternative_name',
                'verbose_name_plural': 'Polity_alternative_names',
            },
        ),
        migrations.CreateModel(
            name='Polity_alternate_religion_genus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Referenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Polity_alternate_religion_genus', max_length=100)),
                ('alternate_religion_genus', models.CharField(choices=[('Zoroastrianism', 'Zoroastrianism'), ('Graeco-Bactrian Religions', 'Graeco-Bactrian Religions'), ('Buddhism', 'Buddhism'), ('Christianity', 'Christianity'), ('Islam', 'Islam'), ('Mongolian Shamanism', 'Mongolian Shamanism'), ('Hittite Religions', 'Hittite Religions'), ('Ismaili', 'Ismaili'), ('Lydian Religions', 'Lydian Religions'), ('Chinese State Religion', 'Chinese State Religion'), ('Egyptian Religions', 'Egyptian Religions'), ('Ancient Iranian Religions', 'Ancient Iranian Religions'), ('Hellenistic Religions', 'Hellenistic Religions'), ('Hephthalite Religions', 'Hephthalite Religions'), ('Manichaeism', 'Manichaeism'), ('Ancient East Asian Religion', 'Ancient East Asian Religion'), ('Jain Traditions', 'Jain Traditions'), ('Xiongnu Religions', 'Xiongnu Religions'), ('Roman State Religions', 'Roman State Religions'), ('Shinto', 'Shinto'), ('Phrygian Religions', 'Phrygian Religions'), ('Mesopotamian Religions', 'Mesopotamian Religions'), ('Hinduism', 'Hinduism'), ('Ancient Javanese Religions', 'Ancient Javanese Religions'), ('Confucianism', 'Confucianism')], max_length=500)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.seshatcomment')),
                ('curator', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='accounts.seshat_expert')),
                ('polity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Polity_alternate_religion_genus',
                'verbose_name_plural': 'Polity_alternate_religion_genus',
            },
        ),
        migrations.CreateModel(
            name='Polity_alternate_religion_family',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Referenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Polity_alternate_religion_family', max_length=100)),
                ('alternate_religion_family', models.CharField(choices=[('Saivist Traditions', 'Saivist Traditions'), ('Assyrian Religions', 'Assyrian Religions'), ('Republican Religions', 'Republican Religions'), ('Imperial Confucian Traditions', 'Imperial Confucian Traditions'), ('Shii', 'Shii'), ('Bhagavatist Traditions', 'Bhagavatist Traditions'), ('Sunni', 'Sunni'), ('Vedist Traditions', 'Vedist Traditions'), ('Saivist', 'Saivist'), ('Islam', 'Islam'), ('Chinese Folk Religion', 'Chinese Folk Religion'), ('Semitic', 'Semitic'), ('Vaisnava Traditions', 'Vaisnava Traditions'), ('Ptolemaic Religion', 'Ptolemaic Religion'), ('Vedic Traditions', 'Vedic Traditions'), ('Japanese Buddhism', 'Japanese Buddhism'), ('Orthodox', 'Orthodox'), ('Vaishnava Traditions', 'Vaishnava Traditions'), ('Shang Religion', 'Shang Religion'), ('Atenism', 'Atenism'), ('Mahayana', 'Mahayana'), ('suspected unknown', 'suspected unknown'), ('Japanese State Shinto', 'Japanese State Shinto'), ('Saiva Traditions', 'Saiva Traditions'), ('Sufi', 'Sufi'), ('Chinese Buddhist Traditions', 'Chinese Buddhist Traditions'), ('Arian', 'Arian'), ('Shia', 'Shia'), ('Catholic', 'Catholic'), ('Western Zhou Religion', 'Western Zhou Religion'), ('Imperial Cult', 'Imperial Cult'), ('Theravada', 'Theravada'), ('Seleucid Religion', 'Seleucid Religion')], max_length=500)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.seshatcomment')),
                ('curator', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='accounts.seshat_expert')),
                ('polity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Polity_alternate_religion_family',
                'verbose_name_plural': 'Polity_alternate_religion_families',
            },
        ),
        migrations.CreateModel(
            name='Polity_alternate_religion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Referenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Polity_alternate_religion', max_length=100)),
                ('alternate_religion', models.CharField(choices=[('Islam', 'Islam'), ('Shadhil', 'Shadhil'), ('Karrami', 'Karrami'), ('Hanafi', 'Hanafi'), ('Mevlevi', 'Mevlevi'), ('Ismaili', 'Ismaili'), ('Shafii', 'Shafii'), ('Shia', 'Shia'), ('Twelver', 'Twelver'), ('Byzantine Orthodox', 'Byzantine Orthodox'), ('Bektasi', 'Bektasi'), ('NO_VALUE_ON_WIKI', 'NO_VALUE_ON_WIKI'), ('Sunni', 'Sunni'), ('Roman Catholic', 'Roman Catholic')], max_length=500)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.seshatcomment')),
                ('curator', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='accounts.seshat_expert')),
                ('polity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Polity_alternate_religion',
                'verbose_name_plural': 'Polity_alternate_religions',
            },
        ),
    ]
