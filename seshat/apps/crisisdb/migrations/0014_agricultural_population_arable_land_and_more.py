# Generated by Django 4.0.3 on 2022-09-09 16:26

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0022_alter_reference_creator_alter_reference_title_and_more'),
        ('crisisdb', '0013_remove_annual_wages_section_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Agricultural_population',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Evidenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Agricultural_population', max_length=100)),
                ('agricultural_population', models.IntegerField(blank=True, null=True)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('polity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Agricultural_population',
                'verbose_name_plural': 'Agricultural_populations',
            },
        ),
        migrations.CreateModel(
            name='Arable_land',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Evidenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Arable_land', max_length=100)),
                ('arable_land', models.IntegerField(blank=True, null=True)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('polity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Arable_land',
                'verbose_name_plural': 'Arable_lands',
            },
        ),
        migrations.CreateModel(
            name='Arable_land_per_farmer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Evidenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Arable_land_per_farmer', max_length=100)),
                ('arable_land_per_farmer', models.IntegerField(blank=True, null=True)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('polity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Arable_land_per_farmer',
                'verbose_name_plural': 'Arable_land_per_farmers',
            },
        ),
        migrations.CreateModel(
            name='Crop_failure_event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Evidenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Crop_failure_event', max_length=100)),
                ('crop_failure_event', models.IntegerField(blank=True, null=True)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('polity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Crop_failure_event',
                'verbose_name_plural': 'Crop_failure_events',
            },
        ),
        migrations.CreateModel(
            name='Disease_outbreak',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Evidenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Disease_outbreak', max_length=100)),
                ('longitude', models.DecimalField(blank=True, decimal_places=10, max_digits=25, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=10, max_digits=25, null=True)),
                ('elevation', models.DecimalField(blank=True, decimal_places=10, max_digits=25, null=True)),
                ('sub_category', models.CharField(choices=[('Peculiar Epidemics', 'Peculiar Epidemics'), ('Pestilence', 'Pestilence'), ('Miasm', 'Miasm'), ('Pox', 'Pox'), ('Uncertain Pestilence', 'Uncertain Pestilence'), ('Dysentery', 'Dysentery'), ('Malaria', 'Malaria'), ('Influenza', 'Influenza'), ('Cholera', 'Cholera'), ('Diptheria', 'Diptheria'), ('Plague', 'Plague')], max_length=500)),
                ('magnitude', models.CharField(choices=[('Uncertain', 'Uncertain'), ('Light', 'Light'), ('Heavy', 'Heavy'), ('No description', 'No description'), ('Heavy- Multiple Times', 'Heavy- Multiple Times'), ('No Happening', 'No Happening'), ('Moderate', 'Moderate')], max_length=500)),
                ('duration', models.CharField(choices=[('No description', 'No description'), ('Over 90 Days', 'Over 90 Days'), ('Uncertain', 'Uncertain'), ('30-60 Days', '30-60 Days'), ('1-10 Days', '1-10 Days'), ('60-90 Days', '60-90 Days')], max_length=500)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('polity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Disease_outbreak',
                'verbose_name_plural': 'Disease_outbreaks',
            },
        ),
        migrations.CreateModel(
            name='Drought_event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Evidenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Drought_event', max_length=100)),
                ('drought_event', models.IntegerField(blank=True, null=True)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('polity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Drought_event',
                'verbose_name_plural': 'Drought_events',
            },
        ),
        migrations.CreateModel(
            name='Gross_grain_shared_per_agricultural_population',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Evidenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Gross_grain_shared_per_agricultural_population', max_length=100)),
                ('gross_grain_shared_per_agricultural_population', models.IntegerField(blank=True, null=True)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('polity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Gross_grain_shared_per_agricultural_population',
                'verbose_name_plural': 'Gross_grain_shared_per_agricultural_populations',
            },
        ),
        migrations.CreateModel(
            name='Locust_event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Evidenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Locust_event', max_length=100)),
                ('locust_event', models.IntegerField(blank=True, null=True)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('polity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Locust_event',
                'verbose_name_plural': 'Locust_events',
            },
        ),
        migrations.CreateModel(
            name='Military_expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Evidenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Military_expense', max_length=100)),
                ('conflict', models.CharField(blank=True, max_length=500, null=True)),
                ('expenditure', models.DecimalField(blank=True, decimal_places=10, max_digits=25, null=True)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('polity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Military_expense',
                'verbose_name_plural': 'Military_expenses',
            },
        ),
        migrations.CreateModel(
            name='Net_grain_shared_per_agricultural_population',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Evidenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Net_grain_shared_per_agricultural_population', max_length=100)),
                ('net_grain_shared_per_agricultural_population', models.IntegerField(blank=True, null=True)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('polity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Net_grain_shared_per_agricultural_population',
                'verbose_name_plural': 'Net_grain_shared_per_agricultural_populations',
            },
        ),
        migrations.CreateModel(
            name='Silver_inflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Evidenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Silver_inflow', max_length=100)),
                ('silver_inflow', models.IntegerField(blank=True, null=True)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('polity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Silver_inflow',
                'verbose_name_plural': 'Silver_inflows',
            },
        ),
        migrations.CreateModel(
            name='Silver_stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Evidenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Silver_stock', max_length=100)),
                ('silver_stock', models.IntegerField(blank=True, null=True)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('polity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Silver_stock',
                'verbose_name_plural': 'Silver_stocks',
            },
        ),
        migrations.CreateModel(
            name='Socioeconomic_turmoil_event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Evidenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Socioeconomic_turmoil_event', max_length=100)),
                ('socioeconomic_turmoil_event', models.IntegerField(blank=True, null=True)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('polity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Socioeconomic_turmoil_event',
                'verbose_name_plural': 'Socioeconomic_turmoil_events',
            },
        ),
        migrations.CreateModel(
            name='Surplus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Evidenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Surplus', max_length=100)),
                ('surplus', models.IntegerField(blank=True, null=True)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('polity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Surplus',
                'verbose_name_plural': 'Surplus',
            },
        ),
        migrations.CreateModel(
            name='Total_population',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_from', models.IntegerField(blank=True, null=True)),
                ('year_to', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('finalized', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
                ('tag', models.CharField(choices=[('TRS', 'Evidenced'), ('DSP', 'Disputed'), ('SSP', 'Suspected'), ('IFR', 'Inferred'), ('UNK', 'Unknown')], default='TRS', max_length=5)),
                ('name', models.CharField(default='Total_population', max_length=100)),
                ('total_population', models.IntegerField(blank=True, null=True)),
                ('citations', models.ManyToManyField(blank=True, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)ss', to='core.citation')),
                ('polity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(app_label)s_%(class)s_related', related_query_name='%(app_label)s_%(class)s', to='core.polity')),
            ],
            options={
                'verbose_name': 'Total_population',
                'verbose_name_plural': 'Total_populations',
            },
        ),
        migrations.RemoveField(
            model_name='balance',
            name='citations',
        ),
        migrations.RemoveField(
            model_name='balance',
            name='polity',
        ),
        migrations.RemoveField(
            model_name='diding_taxes',
            name='citations',
        ),
        migrations.RemoveField(
            model_name='diding_taxes',
            name='polity',
        ),
        migrations.RemoveField(
            model_name='disease_event',
            name='citations',
        ),
        migrations.RemoveField(
            model_name='disease_event',
            name='polity',
        ),
        migrations.RemoveField(
            model_name='examination',
            name='citations',
        ),
        migrations.RemoveField(
            model_name='examination',
            name='polity',
        ),
        migrations.RemoveField(
            model_name='gdp_growth_rate',
            name='citations',
        ),
        migrations.RemoveField(
            model_name='gdp_growth_rate',
            name='polity',
        ),
        migrations.RemoveField(
            model_name='gdp_total',
            name='citations',
        ),
        migrations.RemoveField(
            model_name='gdp_total',
            name='polity',
        ),
        migrations.RemoveField(
            model_name='jinshi_degrees_awarded',
            name='citations',
        ),
        migrations.RemoveField(
            model_name='jinshi_degrees_awarded',
            name='polity',
        ),
        migrations.RemoveField(
            model_name='land_taxes_collected',
            name='citations',
        ),
        migrations.RemoveField(
            model_name='land_taxes_collected',
            name='polity',
        ),
        migrations.RemoveField(
            model_name='land_yield',
            name='citations',
        ),
        migrations.RemoveField(
            model_name='land_yield',
            name='polity',
        ),
        migrations.RemoveField(
            model_name='lijin',
            name='citations',
        ),
        migrations.RemoveField(
            model_name='lijin',
            name='polity',
        ),
        migrations.RemoveField(
            model_name='maritime_custom',
            name='citations',
        ),
        migrations.RemoveField(
            model_name='maritime_custom',
            name='polity',
        ),
        migrations.RemoveField(
            model_name='misc_incomes',
            name='citations',
        ),
        migrations.RemoveField(
            model_name='misc_incomes',
            name='polity',
        ),
        migrations.RemoveField(
            model_name='other_incomes',
            name='citations',
        ),
        migrations.RemoveField(
            model_name='other_incomes',
            name='polity',
        ),
        migrations.RemoveField(
            model_name='population',
            name='citations',
        ),
        migrations.RemoveField(
            model_name='population',
            name='polity',
        ),
        migrations.RemoveField(
            model_name='rate_of_gdp_per_capita_growth',
            name='citations',
        ),
        migrations.RemoveField(
            model_name='rate_of_gdp_per_capita_growth',
            name='polity',
        ),
        migrations.RemoveField(
            model_name='rate_of_return',
            name='citations',
        ),
        migrations.RemoveField(
            model_name='rate_of_return',
            name='polity',
        ),
        migrations.RemoveField(
            model_name='revenue_official',
            name='citations',
        ),
        migrations.RemoveField(
            model_name='revenue_official',
            name='polity',
        ),
        migrations.RemoveField(
            model_name='revenue_real',
            name='citations',
        ),
        migrations.RemoveField(
            model_name='revenue_real',
            name='polity',
        ),
        migrations.RemoveField(
            model_name='salt_tax',
            name='citations',
        ),
        migrations.RemoveField(
            model_name='salt_tax',
            name='polity',
        ),
        migrations.RemoveField(
            model_name='shares_of_world_gdp',
            name='citations',
        ),
        migrations.RemoveField(
            model_name='shares_of_world_gdp',
            name='polity',
        ),
        migrations.RemoveField(
            model_name='taiping_rebellion',
            name='citations',
        ),
        migrations.RemoveField(
            model_name='taiping_rebellion',
            name='polity',
        ),
        migrations.RemoveField(
            model_name='tariff_and_transit',
            name='citations',
        ),
        migrations.RemoveField(
            model_name='tariff_and_transit',
            name='polity',
        ),
        migrations.RemoveField(
            model_name='total_economic_output',
            name='citations',
        ),
        migrations.RemoveField(
            model_name='total_economic_output',
            name='polity',
        ),
        migrations.RemoveField(
            model_name='total_expenditure',
            name='citations',
        ),
        migrations.RemoveField(
            model_name='total_expenditure',
            name='polity',
        ),
        migrations.RemoveField(
            model_name='total_revenue',
            name='citations',
        ),
        migrations.RemoveField(
            model_name='total_revenue',
            name='polity',
        ),
        migrations.RemoveField(
            model_name='total_tax',
            name='citations',
        ),
        migrations.RemoveField(
            model_name='total_tax',
            name='polity',
        ),
        migrations.RemoveField(
            model_name='wages',
            name='citations',
        ),
        migrations.RemoveField(
            model_name='wages',
            name='polity',
        ),
        migrations.RemoveField(
            model_name='worker_wage',
            name='citations',
        ),
        migrations.RemoveField(
            model_name='worker_wage',
            name='polity',
        ),
        migrations.RemoveField(
            model_name='famine_event',
            name='duration',
        ),
        migrations.RemoveField(
            model_name='famine_event',
            name='elevation',
        ),
        migrations.RemoveField(
            model_name='famine_event',
            name='latitude',
        ),
        migrations.RemoveField(
            model_name='famine_event',
            name='longitude',
        ),
        migrations.RemoveField(
            model_name='famine_event',
            name='magnitude',
        ),
        migrations.RemoveField(
            model_name='famine_event',
            name='sub_category',
        ),
        migrations.RemoveField(
            model_name='gdp_per_capita',
            name='GDP_per_capita',
        ),
        migrations.AddField(
            model_name='gdp_per_capita',
            name='gdp_per_capita',
            field=models.DecimalField(blank=True, decimal_places=10, max_digits=25, null=True),
        ),
        migrations.DeleteModel(
            name='Annual_wages',
        ),
        migrations.DeleteModel(
            name='Balance',
        ),
        migrations.DeleteModel(
            name='Diding_taxes',
        ),
        migrations.DeleteModel(
            name='Disease_event',
        ),
        migrations.DeleteModel(
            name='Examination',
        ),
        migrations.DeleteModel(
            name='Gdp_growth_rate',
        ),
        migrations.DeleteModel(
            name='Gdp_total',
        ),
        migrations.DeleteModel(
            name='Jinshi_degrees_awarded',
        ),
        migrations.DeleteModel(
            name='Land_taxes_collected',
        ),
        migrations.DeleteModel(
            name='Land_yield',
        ),
        migrations.DeleteModel(
            name='Lijin',
        ),
        migrations.DeleteModel(
            name='Maritime_custom',
        ),
        migrations.DeleteModel(
            name='Misc_incomes',
        ),
        migrations.DeleteModel(
            name='Other_incomes',
        ),
        migrations.DeleteModel(
            name='Population',
        ),
        migrations.DeleteModel(
            name='Rate_of_gdp_per_capita_growth',
        ),
        migrations.DeleteModel(
            name='Rate_of_return',
        ),
        migrations.DeleteModel(
            name='Revenue_official',
        ),
        migrations.DeleteModel(
            name='Revenue_real',
        ),
        migrations.DeleteModel(
            name='Salt_tax',
        ),
        migrations.DeleteModel(
            name='Shares_of_world_gdp',
        ),
        migrations.DeleteModel(
            name='Taiping_rebellion',
        ),
        migrations.DeleteModel(
            name='Tariff_and_transit',
        ),
        migrations.DeleteModel(
            name='Total_economic_output',
        ),
        migrations.DeleteModel(
            name='Total_expenditure',
        ),
        migrations.DeleteModel(
            name='Total_revenue',
        ),
        migrations.DeleteModel(
            name='Total_tax',
        ),
        migrations.DeleteModel(
            name='Wages',
        ),
        migrations.DeleteModel(
            name='Worker_wage',
        ),
    ]
