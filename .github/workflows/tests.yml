---
name: Test code

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

jobs:
  test_core:
    strategy:
      matrix:
        python-version: ['3.8']
        os: ['ubuntu-latest']
    runs-on: ${{ matrix.os }}
    services:
      postgres:
        image: postgis/postgis
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get install gdal-bin -y
        sudo apt-get install libgdal-dev -y
        sudo apt install libgeos++-dev libgeos3.10.2 -y
        sudo apt install libgeos-c1v5 libgeos-dev libgeos-doc -y
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install "django-geojson [field]"
    - name: Check PostgreSQL connectivity
      run: |
        PGPASSWORD=postgres psql -h localhost -U postgres -c 'SELECT 1'
    - name: Set max_locks_per_transaction so that tests can run without running out of memory
      run: |
        PGPASSWORD=postgres psql -h localhost -U postgres -d github_actions -c 'ALTER SYSTEM SET max_locks_per_transaction = 256;'
        PGPASSWORD=postgres psql -h localhost -U postgres -c 'SELECT pg_reload_conf();'
    - name: Run tests
      run: |
        export DJANGO_SETTINGS_MODULE=seshat.settings.local
        python manage.py test seshat.apps.core --keepdb
